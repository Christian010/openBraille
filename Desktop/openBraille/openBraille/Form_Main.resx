<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList_Icons.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList_Icons.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAB0
        BgAAAk1TRnQBSQFMAgEBAgEAAVgBAAFYAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEBIAA1cB3wNXAd8DVwHfA0MBeAQAAw0BEgNVAbcDVwHfA1cB3wNXAd8DVwHf
        A1cB3wNXAd8DVwHfA1cB3wNXAd8YAANaAdUDUgHoA1IB6ANXAeIDDwEUlwAB/wMAAf8DAAH/A1cB4gM9
        AWoDBAEFAysBQgNSAagDUwGsA1MBrANTAawDUwGsA1MBrANTAawDUwGsA1MBrBQAAxIBGAMAAf8DAAH/
        AwAB/wMAAf8DKAE9lwAB/wMAAf8DAAH/AwAB/wNcAdQDNwFbAwUBBwMjATQDJAE2AyQBNgMkATYDJAE2
        AyQBNgMkATYDJAE2AyQBNgQAAxIBGQNBAXIDEQEXAwEBAgNEAXkDAAH/AwAB/wMAAf8DAAH/A00BlgMG
        AQgDCwEPAzwBaAMaASWEAANWAbsDAAH/AwAB/wMAAf8DAAH/A1sByAMwAUsDAAEBJAADUQGgAwAB/wMd
        AfoDWAHdAwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/A1cB4gMwAfUDAAH/A1YBuIQAAy8BSgNaAcoDAAH/
        AwAB/wMAAf8DAAH/A1cBvQMnATogAAMjATMDAAH+AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMA
        Af8DAAH/AwAB/wMAAf8DAAH/AwAB/wMvAUmEAAM0AVUDWwHaAwAB/wMAAf8DAAH/AwAB/wNWAbMDHAEo
        AwABARgAA1EBoQMAAf8DAAH/AwAB/wMAAf8DAAH/A1MBrQMtAUUDLQFGA1MBsAMAAf8DAAH/AwAB/wMA
        Af8DAAH/A1kBxIgAAzkBXwNNAewDAAH/AwAB/wMAAf8DAAH/A1MBqgMQARYYAAMNARIDVQG6AwAB/wMA
        Af8DAAH/A1MBqhAAA1MBsAMAAf8DAAH/AwAB/wNYAcYDGgEkjAADPAFoAwAB/gMAAf8DAAH/AwAB/wMA
        Af8DUQGiAwIBAxgAAwIBAwMLAfwDAAH/AwAB/wMqAUAQAAMtAUYDAAH/AwAB/wMwAfUDAgEDkAADCgEN
        A0IBdgMLAf0DAAH/AwAB/wMAAf8DOwHzA0wBkgMCAQMUAAMBAQIDJQH4AwAB/wMAAf8DKgFBEAADLQFF
        AwAB/wMAAf8DIgH5AwABAZQAAxIBGQNIAYcDAAH+AwAB/wMAAf8DAAH/A1EB6QM+AWsQAAMQARYDVgG8
        AwAB/wMAAf8DAAH/A1IBqRAAA1MBrQMAAf8DAAH/AwAB/wNWAbMDCgEOlAADGgEkA04BmAMLAf0DAAH/
        AwAB/wNVAeYDLQFFAx4BKwMHAQkIAANUAa4DAAH/AwAB/wMAAf8DAAH/AwAB/wNSAakDKgFBAyoBQANT
        AaoDAAH/AwAB/wMAAf8DAAH/AwAB/wNPAZuYAAMgAS4DUgGpAwsB/QNQAeoDQwF3AyYBOANRAaADPAFo
        AwMBBAQAAygBPQMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMA
        Af8DCwH9AyEBMZwAAyQBNgNWAbgDSgGMAyEBMQNOAZQDCwH9A1oB2AMaASQIAANUAasDAAH/Ax0B+gNX
        AeIDAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DWgHgAwsB/AMAAf8DUAGdpAADJAE2Aw4BEwNGAYADCwH9
        AwAB/wNTAecDKQE+CAADFgEeA0IBdgMSARgDBQEHA0wBkQMAAf8DAAH/AwAB/wMAAf8DQwF4AwIBAwMU
        ARwDQwF4AxIBGKgAAwoBDQNaAdMDCwH8A0AB8gNKAYoDAQECGAADIAEuAwAB/wMAAf8DAAH/AwAB/wMP
        ARS8AAMgAS8DVgHlA00BlQMAAQEcAAMHAQkDJQH4AwAB/wMAAf8DUQHrmAABQgFNAT4HAAE+AwABKAMA
        AUADAAEQAwABAQEAAQEFAAGAFwAD/wEAAQgBAAH8AR8GAAH4AR8GAAGAAQEFAAH/AYABAQUAAf8GAAGA
        AT8GAAHAAT8BAwHABAAB4AEfAYMBwQQAAeABDwGDAcEEAAHwAQ8BAwHABAAB+AEDBgAB/AEBBgAB/gEB
        AYABAQQAAf8BAQGAAQEEAAH/AYEB+AEfBAAB/wHDAfgBPwQACw==
</value>
  </data>
  <data name="label_Calibrate.Text" xml:space="preserve">
    <value>Para que los resultados de openBraille sean adecuados, todos los octágonos deben estar en la posición 0 (aquella que no tiene puntos) antes de empezar a escribir. Utilice los controles para calibrar aquellos octágonos que se encuentren en una posición incorrecta.</value>
  </data>
  <metadata name="openFileDialog_ReadFile.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>154, 17</value>
  </metadata>
</root>